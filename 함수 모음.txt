int compare(const void *a, const void *b){
    int x = *(int*)a;
    int y = *(int*)b;
    if (x < y) return -1;
    if (x > y) return 1;
    return 0;
} //이진 탐색을 위한 compare 함수(오름차순)

int binary_search(int *set, int x, int size){
    int left = 0;
    int right = size - 1;
    while(left <= right){
        int mid = (left + right) / 2;
        if(set[mid] == x){
            return 1;   // 찾음
        } else if(set[mid] > x){
            right = mid - 1;
        } else {
            left = mid + 1;
        }
    }
    return 0;   // 못 찾음
} //이진 탐색 정수용

int compare_str(const void *a, const void *b) {
    const char *strA = (const char *)a;
    const char *strB = (const char *)b;
    return strcmp(strA, strB); // strcmp는 음수/0/양수 반환
}


int binary_search_str(char* arr, int size, const char *target){
    int left = 0, right = size - 1;
    while(left <= right){
        int mid = (left + right) / 2;
        int cmp = strcmp(arr[mid], target);  // 문자열 비교
        if(cmp == 0){
            return mid;  // 찾음, 인덱스 반환
        } else if(cmp > 0){
            right = mid - 1;  // mid가 target보다 크면 왼쪽
        } else {
            left = mid + 1;   // mid가 target보다 작으면 오른쪽
        }
    }
    return -1;  // 못 찾음
}//이진 탐색 문자열용